plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'site.unoeyhi'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 기본 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JJWT (JSON Web Token) - 전체 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MariaDB JDBC 드라이버
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'

    // Thymeleaf Extras (Spring Security 6용)
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'

    // Log JDBC 설정 (query 정리되어서 출력)
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // SpringDoc (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // AWS SDK
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.779'
    implementation 'software.amazon.awssdk:s3:2.20.25'
    implementation 'software.amazon.awssdk:dynamodb:2.20.25'
    implementation 'software.amazon.awssdk:core:2.20.25'

    implementation 'com.microsoft.playwright:playwright:1.41.0' // 최신 버전 확인 후 적용

    // implementation 'io.github.bonigarcia:webdrivermanager:5.6.3'
    // // Selenium 크롤링 (최신 버전으로 변경)
    // implementation 'org.seleniumhq.selenium:selenium-java:4.25.0'
    // implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.25.0'
    // implementation 'org.seleniumhq.selenium:selenium-remote-driver:4.25.0'
    // implementation 'org.seleniumhq.selenium:selenium-support:4.25.0'

    // Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    // 테스트 관련 의존성 (정리)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.assertj:assertj-core:3.23.0'
}

configurations { 
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs.addAll(["-Xlint:deprecation", "-Xlint:unchecked", "-parameters"])
}

sourceSets {
    main.java.srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
}
